name: Build and push to ECR

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]

  push:
    branches:
      - master
    tags:
    - v*.*.*

permissions:
  id-token: write
  contents: read

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    outputs:
      is-release: ${{ steps.metadata.outputs.is-release }}
      version: ${{ steps.metadata.outputs.version }}
      publishable: ${{ steps.metadata.outputs.publishable }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Find application metadata
        id: metadata
        uses: equisoft-actions/application-metadata@v1

  build:
    runs-on: [self-hosted]
    needs:
      - setup
    if: |
      !failure() &&
      !cancelled()
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Build and push
        id: build-and-push
        uses: equisoft-actions/docker-build-and-push@v2
        with:
          registry: ${{ vars.ECR_REGISTRY }}
          aws-region: ${{ vars.ECR_AWS_REGION }}
          role-to-assume: ${{ vars.ECR_ROLE }}
          role-session-name: ecr-docker-provider-sql
          name: provider-sql
          push: true
          is-release: ${{ needs.setup.outputs.is-release }}
          version: ${{ needs.setup.outputs.version }}
          build-args: |
            GO_VERSION=1.23-alpine
          no-cache: true
          pull: true
          context: .
          use-emulation: false
          dockerfile: ./cluster/images/provider-sql/Dockerfile
